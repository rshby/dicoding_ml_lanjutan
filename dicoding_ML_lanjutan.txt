import tensorflow as tf
import nompy as np
from tensorflow import keras

xs = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], dtype=float)
ys = np.array([4.0, 6.0 8.0, 10.0, 12.0, 14.0], dtype=float)

model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])

model.compile(optimizer="sgd", loss="mean_squared_error")

model.fit(xs, ys, epochs=150)

print(model.predict([10.0]))

//multi layer
model = tf.keras.Sequrntial([
	keras.layers.Dense(units=1, input_shape=[1]),
	keras.layers.Desnse(units=8),
	keras.layers.Dense(units=1)
])

Y_train = Y_train.astype(np.float32)
Y_test = T_test.astype(np.float32)

from keras.models import Sequantial
from keras.layers import Dense

model.Sequential([
	Dense(32, activation="relu", input_shape(5,)),
	Dense(32, activation="relu"),
	Dense(1, activation="sigmoid")
])

model.compile(optimizer="sgd", loss="binary_crossentropy", metrics=["accuracy"])

model.fit(X_train, Y_train, epochs=100)

model.evaluate(X_test, Y_test)